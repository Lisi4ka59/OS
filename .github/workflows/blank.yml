# This is a basic workflow to help you get started with Actions

name: Smoke Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "lab1" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Install
        run: 
          sudo apt-get install gcc
      - name: Compile stress
        run: 
          gcc -o stress-test ./benchmark/stress-test.c
      - name: Compile search
        run: 
          gcc -o ema-search-str ./benchmark/ema-search-str.c
      - name: Compile path
        run: 
          gcc -o short-path ./benchmark/short-path.c


      - name: Run search test

        run: |
          SUBSTRING=$(cat substring.txt)
          ./ema-search-str benchmark/test.txt "$SUBSTRING" 1 > output.txt 2>&1 || exit 1
          if [ -s output.txt ]; then
          echo "Test failed: Program produced output or error"
          cat output.txt
          exit 1
          fi

      - name: Run path test

        run: |
          ./short-path 1000 > output.txt 2>&1 || exit 1
          if [ -s output.txt ]; then
          echo "Test failed: Program produced output or error"
          cat output.txt
          exit 1
          fi

      - name: Run stress test

        run: |
          SUBSTRING=$(cat substring.txt)
          ./stress-test benchmark/test.txt "$SUBSTRING" 1 > output.txt 2>&1 || exit 1
          if [ -s output.txt ]; then
          echo "Test failed: Program produced output or error"
          cat output.txt
          exit 1
          fi



          
